%% Class 2 Weight Estimation
clear
clc

%% Weight Estimation Raymer Methods
% Date Edited: 01/24/25

% Authors: Michael Chen
%          Jacob Quiray

% Inputs:
% - Aircraft parameters (stored in struct array)
% - Wing and fuselage design parameters

% Outputs:
% - Weight of each component
% - CG of each component as a % of MAC

%% Define Aircraft Data
% Aircraft data stored in a struct array for scalability
Aircraft(1).Name = 'EmbraerP2'; % Aircraft name
Aircraft(1).K_dw = 1;           % Wing design factor
Aircraft(1).K_vs = 1;           % Vertical load factor
Aircraft(1).W_dg = 12500;       % Design gross weight (lbs)
Aircraft(1).Nz = 3.75;          % Ultimate load factor
Aircraft(1).S_w = 313;          % Wing reference area (ft^2)
Aircraft(1).A = 8.07;           % Aspect ratio
Aircraft(1).t_c_root = 0.16;    % Thickness-to-chord ratio at root
Aircraft(1).lambda = 0.55;      % Taper ratio
Aircraft(1).Lambda = 0;         % Sweep angle at 25% MAC (radians)
Aircraft(1).W_fw = 3062;        % Fuel weight in the wing (lbs)
Aircraft(1).velocity = 374;     % Cruise velocity (ft/s)
Aircraft(1).q = calculateDynamicPressure(Aircraft(1).velocity); % Dynamic pressure (lb/ft^2)
Aircraft(1).WingGroup = Aircraft(1).W_dg * 0.120;               % Actual wing group weight (lbs)
Aircraft(1).FuseGroup = Aircraft(1).W_dg * 0.108;               % Actual fuselage group weight (lbs)
Aircraft(1).EmpennGroup = Aircraft(1).W_dg * 0.036;
Aricraft(1).NacelleGroup = Aircraft(1).W_dg * 0.016; 
Aircraft(1).LG = Aircraft(1).W_dg * 0.043;

Aircraft(2).Name = 'Cessna172';
Aircraft(2).K_dw = 1;
Aircraft(2).K_vs = 1;
Aircraft(2).W_dg = 2200;
Aircraft(2).Nz = 5.7;
Aircraft(2).S_w = 175;
Aircraft(2).A = 7.32;
Aircraft(2).t_c_root = 0.12;
Aircraft(2).lambda = 0.75;
Aircraft(2).Lambda = 0;
Aircraft(2).W_fw = 252;
Aircraft(2).velocity = 249.333; % ft/s
Aircraft(2).S_h = ;
Aircraft(2).l_h = ;
Aircraft(2).b_h = ;
Aircraft(2).t_r_h = ;
Aircraft(2).S_v = ;
Aircraft(2).l_v = ;
Aircraft(2).b_v = ;
Aircraft(2).t_r_v = ;
Aircraft(2).q = calculateDynamicPressure(Aircraft(2).velocity);
Aircraft(2).WingGroup = Aircraft(2).W_dg * 0.103;
Aircraft(2).FuseGroup = Aircraft(2).W_dg * 0.160;
Aircraft(2).EmpennGroup = Aircraft(2).W_dg * 0.026;
Aricraft(1).NacelleGroup = Aircraft(1).W_dg * 0.012; 
Aircraft(1).LG = Aircraft(1).W_dg * 0.050;

Aircraft(3).Name = 'Cessna180';
Aircraft(3).K_dw = 1;
Aircraft(3).K_vs = 1;
Aircraft(3).W_dg = 2650;
Aircraft(3).Nz = 5.7;
Aircraft(3).S_w = 175;
Aircraft(3).A = 7.428;
Aircraft(3).t_c_root = 0.12;
Aircraft(3).lambda = 0.75;
Aircraft(3).Lambda = 0;
Aircraft(3).W_fw = 390;
Aircraft(3).velocity = 249.333; % ft/s
Aircraft(3).q = calculateDynamicPressure(Aircraft(3).velocity);
Aircraft(3).WingGroup = Aircraft(3).W_dg * 0.089;
Aircraft(3).FuseGroup = Aircraft(3).W_dg * 0.152;
Aircraft(3).EmpennGroup = Aircraft(3).W_dg * 0.023;
Aricraft(1).NacelleGroup = Aircraft(1).W_dg * 0.012; 
Aircraft(1).LG = Aircraft(1).W_dg * 0.042;

%% Calculate Wing Weight for Each Aircraft
for i = 1:length(Aircraft)
    Aircraft(i).W_wingGARaymer = WingWeightGARaymer(Aircraft(i));
    Aircraft(i).W_wingGA_USAF = WingWeightGA_USAf(Aircraft(i));
    Aircraft(i).W_wingAttackRaymer = WingWeightAttackRaymer(Aircraft(i));

end

%% Display Results in Table
AircraftNames = {Aircraft.Name}';
RaymerGAMethod = [Aircraft.W_wingGARaymer]';
RaymerAttackMethod = [Aircraft.W_wingAttackRaymer]';
USAF_GAMethod = [Aircraft.W_wingGA_USAF]';
ActualWingWeight = [Aircraft.WingGroup]';

% Create a wing table
WingResultsTable = table(AircraftNames, RaymerGAMethod, RaymerAttackMethod, USAF_GAMethod, ActualWingWeight, ...
    'VariableNames', {'Aircraft', 'Raymer_GA_Method_lbs', 'Raymer_Attack_Method_lbs', 'USAF_GA_ Method', 'Actual_Wing_Weight_lbs'});

% Display the table
disp(WingResultsTable);

%Create a fuselage table
% FuselageResultsTable = table(AircraftNames)

%% Function Definitions
function q = calculateDynamicPressure(velocity)
    % Calculate dynamic pressure based on velocity
    rho = 0.002377; % Air density at sea level (slug/ft^3)
    q = 0.5 * rho * velocity^2;
end

% General Aviation

function W_wing = WingWeightGARaymer(Aircraft)
    % Calculate wing weight for a general aviation aircraft
    % Inputs:
    %   Plane - Struct containing aircraft parameters
    % Output:
    %   W_wing - Calculated wing weight

    W_wing = 0.036 * Aircraft.S_w^0.758 * Aircraft.W_fw^0.0035 * (Aircraft.A / cos(Aircraft.Lambda)^2)^0.6 ...
             * Aircraft.q^0.006 * Aircraft.lambda^0.04 * (100 * Aircraft.t_c_root / cos(Aircraft.Lambda))^-0.3 ...
             * (Aircraft.Nz * Aircraft.W_dg)^0.49;
end

function W_wing = WingWeightGA_USAf(Aircraft)
    % Calculate wing weight for a general aviation aircraft
    % Inputs:
    %   Plane - Struct containing aircraft parameters
    % Output:
    %   W_wing - Calculated wing weight

    % Constants and parameters
    K_constant = 96.948; % Empirical constant

    W_wing = K_constant * ((Aircraft.W_dg * Aircraft.Nz / 1e5)^0.65) ...
           * ((Aircraft.A / cos(Aircraft.Lambda))^0.57) ...
           * ((Aircraft.S_w / 100)^0.61) ...
           * (((1 + Aircraft.lambda) / (2 * Aircraft.t_c_root))^0.36) ...
           * ((1 + (Aircraft.velocity/1.688) / 500)^0.5)^0.993;
end
% Attack 

function W_wing = WingWeightAttackRaymer(Plane)
    % Calculate wing weight for attack aircraft using Raymer's method
    % Inputs:
    %   Plane - Struct containing aircraft parameters
    % Output:
    %   W_wing - Calculated wing weight

    W_wing = 0.0103 * Plane.K_dw * Plane.K_vs * (Plane.W_dg * Plane.Nz)^0.5 * Plane.S_w^0.622 * Plane.A^0.785 ...
             * (Plane.t_c_root)^-0.4 * (1 + Plane.lambda)^0.05 * (cos(Plane.Lambda))^-1.0;
end

function W_fuselage = FuselageWeightAttackRaymer(Plane)
    % Calculate fuselage weight for attack aircraft using Raymer's method
    % Inputs:
    %   Plane - Struct containing aircraft parameters
    % Output:
    %   W_fuselage - Calculated fuselage weight

    W_fuselage = 0.499 * Plane.K_dwf * Plane.W_dg^0.35 * Plane.Nz^0.25 * Plane.L^0.5 * Plane.D^0.849 * Plane.W^0.685;
end

% Cargo

function W_wing = WingWeightCargoRaymer(Plane)
    % Calculate wing weight for cargo aircraft using Raymer's method
    % Inputs:
    %   Plane - Struct containing aircraft parameters
    % Output:
    %   W_wing - Calculated wing weight

    W_wing = 0.0051 * (Plane.W_dg * Plane.Nz)^0.557 * Plane.S_w^0.649 * Plane.A^0.5 * (Plane.t_c_root)^-0.4 ...
             * (1 + Plane.lambda)^0.1 * (cos(Plane.Lambda))^-1.0;
end

function W_fuselageUSAF = FuselageWeightUSAF(Plane)
    %Calculate wing weight for light and utility type airplanes with
    %performance up to 300 kts
    % Inputs:
    %   n_ult: ultimate load factor
    %   l_f: fuselage length in feet
    %   w_f: maximum fuselage width in feet
    %   h_f: maximum fuselage height in feet
    %   V_C: design cruise speed in KEAS = Velocity

    W_fuselageUSAF = 200 * ( (Plane.W_TO * Plane.Nz/10e5)^0.286 * (Plane.l_f/10)^0.857 ...
        * ((Plane.w_f + Plane.h_f)/10 *(Plane.velocity/100)^0.338) )^1.1;

end
