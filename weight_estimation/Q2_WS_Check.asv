

% AERO 443
% David Harris

% clear
% close all
% format short
% clc

%% Aerodynamic Values
    
    % Payload Weight (maximum payload capability of at least 3500)
        %Wpl = linspace(1000,4500, 8);       % new rough values    % comparison table; (3500 from requirments) + (440 estimated crew); include optional sensors/avionics later
        
        % Baseline w cannons = 800 lb
            % Two pilots = 220 * 2  = 440 lb
            % Optional Sensors/Avionics = 40 + 20 = 60 lb
            % Cannons (non-removable?) = 160 lb
                % Rounds = 140
 
    % Cruise L/D
        LDcr = linspace(9.17199982, 17.3167353, 5);     % bad (1) to good (0)

    % Loiter L/D
        LDlt = linspace( 7.94824503, 14.9197245, 5);

    % Loiter Velocity
        WS = 48;                 % lb/ft^2
        rho_lt = 0.002378;       % slugs/ft^3, sea level   
        rho_cr = 0.001496;       % slugs/ft^3, 15000ft
        
        Cl_lt_0 = 0.666667;     % CL_Endurance_0;                     % Cl loiter at lowest drag configuration
        Cl_lt_1 = 0.666667;     % CL_Endurance_1;                     % Cl loiter at highest drag configuration
        Vlt_0 = sqrt( (2*WS) / (rho_lt*Cl_lt_0) );  % ft/s
        Vlt_1 = sqrt( (2*WS) / (rho_lt*Cl_lt_1) );  % ft/s

        Vlt = (linspace(Vlt_0,Vlt_1, length(LDlt)))* 0.592484;  % knots

        Vcr = 0.592484 * sqrt((2*WS) / (rho_cr*0.378788))       % knots

%% Mission Profile 1: Full Operational Radius + Full Loiter Time (Constant Payload) 
 
% Weight Ratios                
    W1TO = 0.990;
    W21 = 0.990;
    W32 = 0.990;
    W43 = 0.980;
%     W54 = 1 / (exp((R_cr * SFC_cr)/(LD_cr * etap * 325)));
%     W65 = 1 / (exp((E * V_lt * SFC_lt)/(LD_lt * etap * 325)));
%     W76 = 1 / (exp((R_cr * SFC_cr)/(LD_cr * etap * 325)));
    W87 = 0.990;
    W98 = 1;        % alternate replaced extra loiter time; 1 / (exp((R_alt * SFC_alt)/(LD_alt * etap * 325)));
    W109 = 0.995;
 
    W_ratios = W1TO*W21*W32*W43*W87*W98*W109;   % combine constant weight ratios for simplicity

    % Loiter Time
        E = 4;                              % Endurance from requirements[hours]
    % Cruise & Loiter Specific Fuel Consumption
        SFC_cr = 0.5;                       % SFC of PT6A from comparison table
        SFCcr = SFC_cr;
        SFC_lt = SFC_cr;
    % Propeller Efficiency
        etap = 0.85;                        % Propeller Efficiency, approximate from research
    % Empty Weight Fraction
        EWF = 0.52;                         % slightly lower than ST and AT6, optimistic but achievable?   
        % EWF = linspace(0.42, 0.6, 19);      % EWF from comparison table
    % Reserve Fuel Factor
        RFF = 1;

%% 

% Varied Values
    % Payload Weight
        % W_pl = linspace(1500, 4500, 7);
        W_pl = 3820;
    % Operational Radius
        %R_cr = linspace(160,320, 9);
        R_cr = 300;                    % hold constant for W/S checking
    % Drag Polar
        DragPolarResolution = length(LDcr); % 
% Structure for each calculated weight
    % Rows    -> Variable 1
    % Cols    -> Variable 2
    % "Pages" -> Sensitivy Analysis Variable
    % (rows, cols, pages)
        Q2_WS_check.W_to = [];
        Q2_WS_check.W_f = [];

%%for DragPolarIndex = 1:DragPolarResolution
    % Fsolve options
        options = optimoptions('fsolve','Display','off');
    % Initial Guess
        initial_guess = [15000, 7800, 3380];
    % Set Drag Index
        k = 4;

    for j = 1:length(R_cr )         % Calculate weights at every range
        for  i= 1:length(W_pl)                      % Calculate weights at every W_PL
            equations = @(x) [ -x(1) + x(2) + x(3) + W_pl(i);
                               -x(1) + (1/EWF)*x(2);
                               x(1)*(1 - W_ratios * (...
                                                     (1 / (exp((R_cr(j) * SFCcr)          /(LDcr(k) * etap * 325)))) * ...
                                                     (1 / (exp(((E+0.5) * Vlt(k) * SFC_lt)/(LDlt(k) * etap * 325)))) * ...
                                                     (1 / (exp((R_cr(j) * SFCcr)          /(LDcr(k) * etap * 325)))) ...
                                                    )...
                                     ) ...
                                - x(3)];
    
            solutions = fsolve(equations, initial_guess, options);

            Q2_WS_check.W_to(j, i) = solutions(1);  % Takeoff Weight
            Q2_WS_check.W_f(j, i) = solutions(3);   % Fuel Weight
        end
    end
%end

%DragIndexPlot = flip([0 0.25 0.5 0.75 1]);
[X1, X2] = meshgrid (W_pl, R_cr);
%% Plots
% figure; hold on; grid on;
% ylims = [4000 22000];
% xlims = [6000 17000];
% 
% carpet(X1, X2, WPL_Drag.W_to(:,:), 35, 0, 'r', 'b', Linewidth = 2);
%     xlim(xlims)
%     ylim(ylims)
%         ax = gca;
%         ax.FontSize = 20; 
%         ax.YRuler.Exponent =0;
%         grid on;
% 
% % Labels        
%     ylabel("W_T_O [lb]", FontSize=20);
% 
%     text(15500, 12200, "W_P_L [lb]", color = 'b', FontSize=20);
%     carpetlabel(X1, X2, WPL_Drag.W_to(:,:), 0, 0, 1, 0, 11400, 0, 'Color', 'b', 'FontSize', 18)
% 
%     text(12800, 20400, "Range [nm]", color = 'r', FontSize=20)
%     carpetlabel(X1,X2, WPL_Drag.W_to(:,:), 35, 1, 0, 1, -100, 400, 'Color', 'r', 'FontSize', 18)
% 
% % Constant Values
%         strLabel = {'\bfRecon\rm',"SFC = 0.5", "EWF = 0.53", "W/S: 48 lb/sqft", "Loiter Time: 4 hr", "Drag Index: 0.25"};
%         text(6200, 19500, strLabel, fontsize=18);
% 
% % Lines
%         yline(16179, '--', Color = 'k', LineWidth = 1)
%         text(8300, 16179-450, 'W_T_O: 16179 lb', FontSize=18)
